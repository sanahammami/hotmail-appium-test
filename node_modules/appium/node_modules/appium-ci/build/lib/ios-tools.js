"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spawnAsUser = spawnAsUser;
exports.spawnAsCurrentUser = spawnAsCurrentUser;
exports.setIosSimulatorScale = setIosSimulatorScale;
exports.configureXcode = configureXcode;
exports.resetSims = resetSims;
exports.killAll = killAll;

var _path = _interopRequireDefault(require("path"));

var _utils = _interopRequireDefault(require("./utils"));

var _lodash = _interopRequireDefault(require("lodash"));

var _bluebird = _interopRequireDefault(require("bluebird"));

var _appiumSupport = require("appium-support");

const log = _appiumSupport.logger.getLogger('ios-tools');

const SIDE_DISK = '/Volumes/SIDE';

const SIDE_SIMS = _path.default.resolve(SIDE_DISK, 'sims');

function killAll(processes = ['instruments', 'simulator']) {
  processes = _lodash.default.flatten([processes]);
  const seq = (0, _lodash.default)(processes).map(p => {
    return () => {
      return _utils.default.exec(`sudo pkill -f ${p}`).catch(() => {});
    };
  }).value();
  return _bluebird.default.reduce(seq, function (_, fn) {
    return fn();
  }, null);
}

function spawnAsUser(user, cmd, args = []) {
  log.info(`Running spawnAsUser: ${user} ${cmd} ${args}`);
  return _utils.default.exec(`ps -axj | grep loginwindow | awk "/^${user} / {print \\$2;exit}"`).spread(function (stdout) {
    const userPid = stdout.trim();
    return _utils.default.spawn('sudo', ['launchctl', 'bsexec', userPid, 'sudo', '-u', user, cmd, ...args], {
      detached: false
    });
  });
}

function spawnAsCurrentUser(cmd, args = []) {
  log.info(`Running spawnAsCurrentUser: ${cmd} ${args}`);
  return _utils.default.exec('whoami').spread(function (stdout) {
    const currentUser = stdout.trim();
    return spawnAsUser(currentUser, cmd, args);
  });
}

function setIosSimulatorScale(scale = '0.5') {
  log.info('Setting simulator scale');
  return _utils.default.exec(`defaults write com.apple.iphonesimulator SimulatorWindowLastScale ${scale}`);
}

function configureXcode(xCodeVersion) {
  log.info(`Configuring xCode: ${xCodeVersion}`);

  const bin = _path.default.resolve(SIDE_SIMS, 'configure.sh');

  return _utils.default.exec(`${bin} ${xCodeVersion}`);
}

function resetSims() {
  log.info('Resetting simulators');

  const bin = _path.default.resolve(SIDE_SIMS, 'reset-sims.sh');

  return _utils.default.exec(bin);
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9pb3MtdG9vbHMuanMiXSwibmFtZXMiOlsibG9nIiwibG9nZ2VyIiwiZ2V0TG9nZ2VyIiwiU0lERV9ESVNLIiwiU0lERV9TSU1TIiwicGF0aCIsInJlc29sdmUiLCJraWxsQWxsIiwicHJvY2Vzc2VzIiwiXyIsImZsYXR0ZW4iLCJzZXEiLCJtYXAiLCJwIiwidXRpbHMiLCJleGVjIiwiY2F0Y2giLCJ2YWx1ZSIsIkIiLCJyZWR1Y2UiLCJmbiIsInNwYXduQXNVc2VyIiwidXNlciIsImNtZCIsImFyZ3MiLCJpbmZvIiwic3ByZWFkIiwic3Rkb3V0IiwidXNlclBpZCIsInRyaW0iLCJzcGF3biIsImRldGFjaGVkIiwic3Bhd25Bc0N1cnJlbnRVc2VyIiwiY3VycmVudFVzZXIiLCJzZXRJb3NTaW11bGF0b3JTY2FsZSIsInNjYWxlIiwiY29uZmlndXJlWGNvZGUiLCJ4Q29kZVZlcnNpb24iLCJiaW4iLCJyZXNldFNpbXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBR0EsTUFBTUEsR0FBRyxHQUFHQyxzQkFBT0MsU0FBUCxDQUFpQixXQUFqQixDQUFaOztBQUVBLE1BQU1DLFNBQVMsR0FBRyxlQUFsQjs7QUFDQSxNQUFNQyxTQUFTLEdBQUdDLGNBQUtDLE9BQUwsQ0FBYUgsU0FBYixFQUF3QixNQUF4QixDQUFsQjs7QUFFQSxTQUFTSSxPQUFULENBQWtCQyxTQUFTLEdBQUcsQ0FBQyxhQUFELEVBQWdCLFdBQWhCLENBQTlCLEVBQTREO0FBQzFEQSxFQUFBQSxTQUFTLEdBQUdDLGdCQUFFQyxPQUFGLENBQVUsQ0FBQ0YsU0FBRCxDQUFWLENBQVo7QUFDQSxRQUFNRyxHQUFHLEdBQUcscUJBQUVILFNBQUYsRUFBYUksR0FBYixDQUFrQkMsQ0FBRCxJQUFPO0FBQ2xDLFdBQU8sTUFBTTtBQUNYLGFBQU9DLGVBQU1DLElBQU4sQ0FBWSxpQkFBZ0JGLENBQUUsRUFBOUIsRUFBaUNHLEtBQWpDLENBQXVDLE1BQU0sQ0FBRSxDQUEvQyxDQUFQO0FBQ0QsS0FGRDtBQUdELEdBSlcsRUFJVEMsS0FKUyxFQUFaO0FBS0EsU0FBT0Msa0JBQUVDLE1BQUYsQ0FBU1IsR0FBVCxFQUFjLFVBQVVGLENBQVYsRUFBYVcsRUFBYixFQUFpQjtBQUFFLFdBQU9BLEVBQUUsRUFBVDtBQUFjLEdBQS9DLEVBQWlELElBQWpELENBQVA7QUFDRDs7QUFFRCxTQUFTQyxXQUFULENBQXNCQyxJQUF0QixFQUE0QkMsR0FBNUIsRUFBaUNDLElBQUksR0FBRyxFQUF4QyxFQUE0QztBQUMxQ3hCLEVBQUFBLEdBQUcsQ0FBQ3lCLElBQUosQ0FBVSx3QkFBdUJILElBQUssSUFBR0MsR0FBSSxJQUFHQyxJQUFLLEVBQXJEO0FBQ0EsU0FBT1YsZUFBTUMsSUFBTixDQUNKLHVDQUFzQ08sSUFBSyx1QkFEdkMsRUFFTEksTUFGSyxDQUVFLFVBQVVDLE1BQVYsRUFBa0I7QUFDekIsVUFBTUMsT0FBTyxHQUFHRCxNQUFNLENBQUNFLElBQVAsRUFBaEI7QUFDQSxXQUFPZixlQUFNZ0IsS0FBTixDQUNMLE1BREssRUFFTCxDQUFDLFdBQUQsRUFBYyxRQUFkLEVBQXdCRixPQUF4QixFQUFpQyxNQUFqQyxFQUF5QyxJQUF6QyxFQUErQ04sSUFBL0MsRUFBcURDLEdBQXJELEVBQTBELEdBQUdDLElBQTdELENBRkssRUFHTDtBQUFFTyxNQUFBQSxRQUFRLEVBQUU7QUFBWixLQUhLLENBQVA7QUFJRCxHQVJNLENBQVA7QUFTRDs7QUFFRCxTQUFTQyxrQkFBVCxDQUE2QlQsR0FBN0IsRUFBa0NDLElBQUksR0FBRyxFQUF6QyxFQUE2QztBQUMzQ3hCLEVBQUFBLEdBQUcsQ0FBQ3lCLElBQUosQ0FBVSwrQkFBOEJGLEdBQUksSUFBR0MsSUFBSyxFQUFwRDtBQUNBLFNBQU9WLGVBQU1DLElBQU4sQ0FBVyxRQUFYLEVBQXFCVyxNQUFyQixDQUE0QixVQUFVQyxNQUFWLEVBQWtCO0FBQ25ELFVBQU1NLFdBQVcsR0FBR04sTUFBTSxDQUFDRSxJQUFQLEVBQXBCO0FBQ0EsV0FBT1IsV0FBVyxDQUFDWSxXQUFELEVBQWNWLEdBQWQsRUFBbUJDLElBQW5CLENBQWxCO0FBQ0QsR0FITSxDQUFQO0FBSUQ7O0FBR0QsU0FBU1Usb0JBQVQsQ0FBK0JDLEtBQUssR0FBRyxLQUF2QyxFQUE4QztBQUM1Q25DLEVBQUFBLEdBQUcsQ0FBQ3lCLElBQUosQ0FBUyx5QkFBVDtBQUNBLFNBQU9YLGVBQU1DLElBQU4sQ0FDSixxRUFBb0VvQixLQUFNLEVBRHRFLENBQVA7QUFHRDs7QUFFRCxTQUFTQyxjQUFULENBQXlCQyxZQUF6QixFQUF1QztBQUNyQ3JDLEVBQUFBLEdBQUcsQ0FBQ3lCLElBQUosQ0FBVSxzQkFBcUJZLFlBQWEsRUFBNUM7O0FBQ0EsUUFBTUMsR0FBRyxHQUFHakMsY0FBS0MsT0FBTCxDQUFhRixTQUFiLEVBQXdCLGNBQXhCLENBQVo7O0FBQ0EsU0FBT1UsZUFBTUMsSUFBTixDQUFZLEdBQUV1QixHQUFJLElBQUdELFlBQWEsRUFBbEMsQ0FBUDtBQUNEOztBQUVELFNBQVNFLFNBQVQsR0FBc0I7QUFDcEJ2QyxFQUFBQSxHQUFHLENBQUN5QixJQUFKLENBQVMsc0JBQVQ7O0FBQ0EsUUFBTWEsR0FBRyxHQUFHakMsY0FBS0MsT0FBTCxDQUFhRixTQUFiLEVBQXdCLGVBQXhCLENBQVo7O0FBQ0EsU0FBT1UsZUFBTUMsSUFBTixDQUFXdUIsR0FBWCxDQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB1dGlscyBmcm9tICcuL3V0aWxzJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgQiBmcm9tICdibHVlYmlyZCc7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5cblxuY29uc3QgbG9nID0gbG9nZ2VyLmdldExvZ2dlcignaW9zLXRvb2xzJyk7XG5cbmNvbnN0IFNJREVfRElTSyA9ICcvVm9sdW1lcy9TSURFJztcbmNvbnN0IFNJREVfU0lNUyA9IHBhdGgucmVzb2x2ZShTSURFX0RJU0ssICdzaW1zJyk7XG5cbmZ1bmN0aW9uIGtpbGxBbGwgKHByb2Nlc3NlcyA9IFsnaW5zdHJ1bWVudHMnLCAnc2ltdWxhdG9yJ10pIHtcbiAgcHJvY2Vzc2VzID0gXy5mbGF0dGVuKFtwcm9jZXNzZXNdKTtcbiAgY29uc3Qgc2VxID0gXyhwcm9jZXNzZXMpLm1hcCgocCkgPT4ge1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICByZXR1cm4gdXRpbHMuZXhlYyhgc3VkbyBwa2lsbCAtZiAke3B9YCkuY2F0Y2goKCkgPT4ge30pO1xuICAgIH07XG4gIH0pLnZhbHVlKCk7XG4gIHJldHVybiBCLnJlZHVjZShzZXEsIGZ1bmN0aW9uIChfLCBmbikgeyByZXR1cm4gZm4oKTsgfSwgbnVsbCk7XG59XG5cbmZ1bmN0aW9uIHNwYXduQXNVc2VyICh1c2VyLCBjbWQsIGFyZ3MgPSBbXSkge1xuICBsb2cuaW5mbyhgUnVubmluZyBzcGF3bkFzVXNlcjogJHt1c2VyfSAke2NtZH0gJHthcmdzfWApO1xuICByZXR1cm4gdXRpbHMuZXhlYyhcbiAgICBgcHMgLWF4aiB8IGdyZXAgbG9naW53aW5kb3cgfCBhd2sgXCIvXiR7dXNlcn0gLyB7cHJpbnQgXFxcXCQyO2V4aXR9XCJgXG4gICkuc3ByZWFkKGZ1bmN0aW9uIChzdGRvdXQpIHtcbiAgICBjb25zdCB1c2VyUGlkID0gc3Rkb3V0LnRyaW0oKTtcbiAgICByZXR1cm4gdXRpbHMuc3Bhd24oXG4gICAgICAnc3VkbycsXG4gICAgICBbJ2xhdW5jaGN0bCcsICdic2V4ZWMnLCB1c2VyUGlkLCAnc3VkbycsICctdScsIHVzZXIsIGNtZCwgLi4uYXJnc10sXG4gICAgICB7IGRldGFjaGVkOiBmYWxzZSB9KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNwYXduQXNDdXJyZW50VXNlciAoY21kLCBhcmdzID0gW10pIHtcbiAgbG9nLmluZm8oYFJ1bm5pbmcgc3Bhd25Bc0N1cnJlbnRVc2VyOiAke2NtZH0gJHthcmdzfWApO1xuICByZXR1cm4gdXRpbHMuZXhlYygnd2hvYW1pJykuc3ByZWFkKGZ1bmN0aW9uIChzdGRvdXQpIHtcbiAgICBjb25zdCBjdXJyZW50VXNlciA9IHN0ZG91dC50cmltKCk7XG4gICAgcmV0dXJuIHNwYXduQXNVc2VyKGN1cnJlbnRVc2VyLCBjbWQsIGFyZ3MpO1xuICB9KTtcbn1cblxuXG5mdW5jdGlvbiBzZXRJb3NTaW11bGF0b3JTY2FsZSAoc2NhbGUgPSAnMC41Jykge1xuICBsb2cuaW5mbygnU2V0dGluZyBzaW11bGF0b3Igc2NhbGUnKTtcbiAgcmV0dXJuIHV0aWxzLmV4ZWMoXG4gICAgYGRlZmF1bHRzIHdyaXRlIGNvbS5hcHBsZS5pcGhvbmVzaW11bGF0b3IgU2ltdWxhdG9yV2luZG93TGFzdFNjYWxlICR7c2NhbGV9YFxuICApO1xufVxuXG5mdW5jdGlvbiBjb25maWd1cmVYY29kZSAoeENvZGVWZXJzaW9uKSB7XG4gIGxvZy5pbmZvKGBDb25maWd1cmluZyB4Q29kZTogJHt4Q29kZVZlcnNpb259YCk7XG4gIGNvbnN0IGJpbiA9IHBhdGgucmVzb2x2ZShTSURFX1NJTVMsICdjb25maWd1cmUuc2gnKTtcbiAgcmV0dXJuIHV0aWxzLmV4ZWMoYCR7YmlufSAke3hDb2RlVmVyc2lvbn1gKTtcbn1cblxuZnVuY3Rpb24gcmVzZXRTaW1zICgpIHtcbiAgbG9nLmluZm8oJ1Jlc2V0dGluZyBzaW11bGF0b3JzJyk7XG4gIGNvbnN0IGJpbiA9IHBhdGgucmVzb2x2ZShTSURFX1NJTVMsICdyZXNldC1zaW1zLnNoJyk7XG4gIHJldHVybiB1dGlscy5leGVjKGJpbik7XG59XG5cbmV4cG9ydCB7XG4gIHNwYXduQXNVc2VyLFxuICBzcGF3bkFzQ3VycmVudFVzZXIsXG4gIHNldElvc1NpbXVsYXRvclNjYWxlLFxuICBjb25maWd1cmVYY29kZSxcbiAgcmVzZXRTaW1zLFxuICBraWxsQWxsLFxufTtcbiJdLCJmaWxlIjoibGliL2lvcy10b29scy5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLiJ9
